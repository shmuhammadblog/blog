<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Shamsuddeen Hassan Muhammad's Blog</title>
<link>https://shmuhammadblog.github.io/index.html</link>
<atom:link href="https://shmuhammadblog.github.io/index.xml" rel="self" type="application/rss+xml"/>
<description>Shamsuddeen Muhammad Blog</description>
<generator>quarto-0.9.494</generator>
<lastBuildDate>Tue, 31 May 2022 23:00:00 GMT</lastBuildDate>
<item>
  <title>Using command line tool to obtain data</title>
  <link>https://shmuhammadblog.github.io/blog/obtaining data/obtaininda.html</link>
  <description><![CDATA[ 



<blockquote class="blockquote">
<p>Data can be obtained in several ways—for example by downloading it from a server, querying a database, or connecting to a Web API. Sometimes, the data comes in a compressed form or in a binary format such as a Microsoft Excel Spreadsheet. Tools such as curl, tar, wget, csvtool and others can be used to download data. —Data Science at command Line</p>
</blockquote>
<p><img src="https://shmuhammadblog.github.io/blog/obtaining data/terminal2.png" class="img-fluid"></p>
<section id="downloading-from-the-internet-using-curl" class="level2">
<h2 class="anchored" data-anchor-id="downloading-from-the-internet-using-curl">Downloading from the Internet using Curl</h2>
<p><strong>Curl</strong> and <strong>wget</strong> are command line tools that allows you to download files from the Internet. curl and wget are installed by default on most Linux systems. if you do not have either tool installed, you can use the commands below to install curl and wget on Ubuntu.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1">   <span class="fu" style="color: #4758AB;">sudo</span> apt install curl</span>
<span id="cb1-2">   <span class="fu" style="color: #4758AB;">sudo</span> apt install wget</span></code></pre></div>
<p>If you are using a Mac, you can install curl and wget using the following commands:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1">    <span class="ex" style="color: null;">brew</span> install curl</span>
<span id="cb2-2">    <span class="ex" style="color: null;">brew</span> install wget</span></code></pre></div>
<section id="how-to-use-curl" class="level4">
<h4 class="anchored" data-anchor-id="how-to-use-curl">How to Use Curl</h4>
<p>The curl syntax is :</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="ex" style="color: null;">curl</span> [options] [URL...] </span></code></pre></div>
<p>In its simplest form, curl is used to download a file from the Internet without any options.</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb4-1">    <span class="ex" style="color: null;">curl</span> example.com</span></code></pre></div>
<p>The above example, curl displays the contents of the file to the standard output. The command above will download and print the source code of the example.com homepage in your terminal window.</p>
</section>
<section id="save-the-output-to-a-file" class="level4">
<h4 class="anchored" data-anchor-id="save-the-output-to-a-file">Save the Output to a File</h4>
<p>We can use the -o option to save the output to a file.</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb5-1">    <span class="ex" style="color: null;">curl</span> <span class="at" style="color: #657422;">-o</span> example.html example.com</span></code></pre></div>
<p>OR</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb6-1">    <span class="ex" style="color: null;">curl</span> example.com <span class="at" style="color: #657422;">-o</span> example.html</span></code></pre></div>
<p>The above example will save the output to a file named example.html instead of printing it to the terminal. You can also redirect the output to a file using the &gt; operator.</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb7-1">    <span class="ex" style="color: null;">curl</span> <span class="at" style="color: #657422;">-o</span> example.com <span class="op" style="color: #5E5E5E;">&gt;</span> example.html</span></code></pre></div>
<p>We can also use O (uppercase) to save to original file name</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb8-1"></span>
<span id="cb8-2">   <span class="ex" style="color: null;">curl</span> <span class="at" style="color: #657422;">-O</span> example.com</span></code></pre></div>
<p>The above example will save the output to a file named example.com instead of printing it to the terminal.</p>
<p>Sometimes, it’s a good idea to set the verbose mode on. This may provide useful information about the progress of the download.</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb9-1"></span>
<span id="cb9-2"><span class="ex" style="color: null;">curl</span> <span class="at" style="color: #657422;">-v</span> example.com</span></code></pre></div>
<p>curl outputs a progress meter that shows the download rate and the expected time of completion. You can also use the -s option to hide the progress meter and the progress.</p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb10-1"><span class="ex" style="color: null;">curl</span> <span class="at" style="color: #657422;">-s</span> example.com</span></code></pre></div>
</section>
<section id="following-redirects" class="level4">
<h4 class="anchored" data-anchor-id="following-redirects">Following Redirects</h4>
<p>When accessing shortened URL with curl, such as: http://bit.ly/, we need to set the -L option to automatically follow redirects</p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb11-1">    <span class="ex" style="color: null;">curl</span> <span class="at" style="color: #657422;">-L</span> http://bit.ly/</span></code></pre></div>
</section>
<section id="using-curl-to-download-from-ftp-server" class="level4">
<h4 class="anchored" data-anchor-id="using-curl-to-download-from-ftp-server">Using Curl to Download from FTP server</h4>
<p>Curl has over 20 built-in FTP commands. You can use curl to download files from FTP servers as follows:</p>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb12-1">    <span class="ex" style="color: null;">curl</span> <span class="at" style="color: #657422;">-s</span> <span class="st" style="color: #20794D;">"ftp://ftp.gnu.org/welcome.msg"</span> <span class="kw" style="color: #003B4F;">|</span> <span class="ex" style="color: null;">trim</span></span></code></pre></div>
</section>
<section id="how-to-use-wget-command" class="level4">
<h4 class="anchored" data-anchor-id="how-to-use-wget-command">How to use Wget Command</h4>
<p>The wget command is similar to curl, but it does not print the output to the terminal. Instead, it saves the output to a file. Its syntax is shown below:</p>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb13-1">    <span class="fu" style="color: #4758AB;">wget</span> [options] [URL...]</span></code></pre></div>
<p>You can download a file from the Internet using wget and saved to a file.</p>
<div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb14-1">    <span class="fu" style="color: #4758AB;">wget</span> <span class="at" style="color: #657422;">-O</span> example.html example.com</span></code></pre></div>
<div class="sourceCode" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb15-1">    <span class="fu" style="color: #4758AB;">wget</span> example.com</span></code></pre></div>
<p>You can also save the output to a file using the -O option.</p>
<div class="sourceCode" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb16-1">    <span class="fu" style="color: #4758AB;">wget</span> <span class="at" style="color: #657422;">-O</span> example.html example.com</span></code></pre></div>
<p>You can save in a specify folder using the -P option.</p>
<div class="sourceCode" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb17-1">    <span class="fu" style="color: #4758AB;">wget</span> <span class="at" style="color: #657422;">-P</span> /home/example.com example.com</span></code></pre></div>
</section>
</section>
<section id="difference-between-wget-and-curl" class="level2">
<h2 class="anchored" data-anchor-id="difference-between-wget-and-curl">Difference between Wget and Curl</h2>
<p>Wget is similar to curl, but curl is more powerful. wget is a tool to download files from servers while curl is a tool that let’s you exchange requests/responses with a server.</p>
<p>wget’s major advantage is its ability to download recursively. Wget is command line only. There’s no library.</p>
<p>Curl is powered by libcurl - a cross-platform library with a stable API that can be used by each and everyone.</p>
<p>Curl is generally preferred since it supports more features than wget. For comparison <a href="https://curl.se/docs/comparison-table.html">here</a> is the list of features of available with different tools:</p>
</section>
<section id="other-cool-stuff-you-can-do-with-curl" class="level2">
<h2 class="anchored" data-anchor-id="other-cool-stuff-you-can-do-with-curl">Other Cool stuff you can do with curl</h2>
<p>wttr.in: to checker whather in your term</p>
<div class="sourceCode" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb18-1"><span class="ex" style="color: null;">wttr.in/SanFrancisco</span> <span class="co" style="color: #5E5E5E;"># to check weather in San Francisco</span></span></code></pre></div>
<p>rate.sx: Crypto prices without leaving the terminal by running curl rate.sx</p>
<div class="sourceCode" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb19-1"></span>
<span id="cb19-2"><span class="ex" style="color: null;">curl</span> rate.sx</span></code></pre></div>
<p>dict.org: To look up definitions for a word, run curl ‘dict.org/d:word’</p>
<div class="sourceCode" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb20-1"><span class="ex" style="color: null;">curl</span> <span class="st" style="color: #20794D;">'dict.org/d:word'</span></span></code></pre></div>
</section>
<section id="compressing-and-decompressing-files" class="level2">
<h2 class="anchored" data-anchor-id="compressing-and-decompressing-files">Compressing and Decompressing Files</h2>
<p>Large files can be compressed and decompressed.</p>
<section id="compressing-files-using-tar" class="level4">
<h4 class="anchored" data-anchor-id="compressing-files-using-tar">Compressing Files using tar</h4>
<div class="sourceCode" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb21-1">    <span class="fu" style="color: #4758AB;">tar</span> <span class="at" style="color: #657422;">-cvf</span> example.tar ~/desktop/example/</span></code></pre></div>
<p>The options used in the above command to create a tar file are:</p>
<ul>
<li>c – Creates a new .tar archive file.</li>
<li>v – Verbosely show the .tar file progress.</li>
<li>f – File name type of the archive file.</li>
</ul>
</section>
<section id="compressing-files-using-gzip" class="level4">
<h4 class="anchored" data-anchor-id="compressing-files-using-gzip">Compressing Files using gzip</h4>
<div class="sourceCode" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb22-1"><span class="fu" style="color: #4758AB;">tar</span> cvzf example.tar.gz /desktop/examples/</span>
<span id="cb22-2"></span>
<span id="cb22-3"><span class="ex" style="color: null;">or</span> </span>
<span id="cb22-4"></span>
<span id="cb22-5"><span class="fu" style="color: #4758AB;">tar</span> cvzf example.tgz /desktop/examples/</span></code></pre></div>
</section>
</section>
<section id="list-content-of-an-archive-file" class="level2">
<h2 class="anchored" data-anchor-id="list-content-of-an-archive-file">List Content of an Archive File</h2>
<p>To list the contents of an archive file, you can use the following command (with t option):</p>
<div class="sourceCode" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb23-1"></span>
<span id="cb23-2"><span class="fu" style="color: #4758AB;">tar</span> <span class="at" style="color: #657422;">-tvf</span> example.tar </span></code></pre></div>
</section>
<section id="decompressing-archivedd-file" class="level2">
<h2 class="anchored" data-anchor-id="decompressing-archivedd-file">Decompressing Archivedd File</h2>
<p>To uncompress an archive file, you can use the following command (with x option):</p>
<div class="sourceCode" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb24-1"></span>
<span id="cb24-2"><span class="fu" style="color: #4758AB;">tar</span> <span class="at" style="color: #657422;">-xvf</span> example.tar </span></code></pre></div>
<p>If you want to untar in a different directory then use option as -C (specified directory).</p>
<div class="sourceCode" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb25-1">    <span class="fu" style="color: #4758AB;">tar</span> <span class="at" style="color: #657422;">-xvf</span> example.tar <span class="at" style="color: #657422;">-C</span> /desktop/example/</span></code></pre></div>
<p>Finally, you can use unpack command also to decompress the file.</p>
<div class="sourceCode" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb26-1"><span class="ex" style="color: null;">unpack</span> example.tar </span></code></pre></div>
</section>
<section id="csvkit-converting-and-working-with-csv-at-command-line" class="level2">
<h2 class="anchored" data-anchor-id="csvkit-converting-and-working-with-csv-at-command-line">Csvkit : converting and working with CSV at command Line</h2>
<p>csvkit is a suite of command-line tools for converting to and working with CSV, the king of tabular file formats. working with csvkit makes it easy to convert between different formats, and to work with the data in those formats.</p>
<p>You can install csvkit using the following command:</p>
<div class="sourceCode" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb27-1">    <span class="ex" style="color: null;">pip</span> install csvkit</span></code></pre></div>
<p>We can print the contents of the file using the following command:</p>
<div class="sourceCode" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb28-1"><span class="ex" style="color: null;">bat</span> <span class="at" style="color: #657422;">-A</span> data.csv</span></code></pre></div>
<p>The -A option show all non-printable characters such as space, tab, newline, etc.</p>
<p>We can also use another command called csvlook to print the contents of the file nicely.</p>
<div class="sourceCode" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb29-1"><span class="ex" style="color: null;">csvlook</span> data.csv</span></code></pre></div>
<p>Below are some of the commands that you can use with csvkit:</p>
<ul>
<li>Convert Excel to CSV:</li>
</ul>
<div class="sourceCode" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb30-1"><span class="ex" style="color: null;">in2csv</span> data.xls <span class="op" style="color: #5E5E5E;">&gt;</span> data.csv  <span class="co" style="color: #5E5E5E;"># Excel to csv</span></span>
<span id="cb30-2"></span>
<span id="cb30-3"><span class="ex" style="color: null;">in2csv</span> data.json <span class="op" style="color: #5E5E5E;">&gt;</span> data.csv <span class="co" style="color: #5E5E5E;"># json to csv</span></span>
<span id="cb30-4"></span>
<span id="cb30-5"><span class="ex" style="color: null;">csvstat</span> data.csv <span class="co" style="color: #5E5E5E;"># give the statistics of the csv file</span></span>
<span id="cb30-6"></span>
<span id="cb30-7"><span class="ex" style="color: null;">csvjson</span> data.csv <span class="op" style="color: #5E5E5E;">&gt;</span> data.json <span class="co" style="color: #5E5E5E;"># convert csv to json</span></span>
<span id="cb30-8"></span>
<span id="cb30-9"><span class="ex" style="color: null;">csvcut</span>  <span class="at" style="color: #657422;">-n</span> data.csv <span class="co" style="color: #5E5E5E;"># print column names</span></span>
<span id="cb30-10"></span>
<span id="cb30-11"><span class="ex" style="color: null;">csvcut</span> <span class="at" style="color: #657422;">-c</span> column_a,column_c data.csv <span class="op" style="color: #5E5E5E;">&gt;</span> new.csv <span class="co" style="color: #5E5E5E;"># select subset of columns</span></span></code></pre></div>


</section>

 ]]></description>
  <category>data science</category>
  <category>unix</category>
  <guid>https://shmuhammadblog.github.io/blog/obtaining data/obtaininda.html</guid>
  <pubDate>Tue, 31 May 2022 23:00:00 GMT</pubDate>
  <media:content url="https://shmuhammadblog.github.io/blog/obtaining data/terminal.png" medium="image" type="image/png" height="82" width="144"/>
</item>
<item>
  <title>Copying files to and from a docker containers</title>
  <link>https://shmuhammadblog.github.io/blog/movingfilestodocker/movinfiles.html</link>
  <description><![CDATA[ 



<section id="copying-files-to-and-from-docker-container-to-a-host" class="level2">
<h2 class="anchored" data-anchor-id="copying-files-to-and-from-docker-container-to-a-host">Copying files to and from docker container to a host</h2>
<p>You can use the <code>docker cp</code> command to copy files from the host to the container or vice versa.</p>
<section id="copy-files-from-the-host-to-the-container" class="level3">
<h3 class="anchored" data-anchor-id="copy-files-from-the-host-to-the-container">Copy files from the host to the container</h3>
<p>The syntax for copying file from host to container is</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;">docker</span> cp [source] [container:]destination<span class="kw" style="color: #003B4F;">`</span><span class="bu" style="color: null;">.</span></span></code></pre></div>
<p>The example below show how to copy a file (dataset_on_host.csv) from the host to a container folder called data. We saved the file with a new name (dataset_on_container.csv) in the container folder.</p>
<p><img src="https://shmuhammadblog.github.io/blog/movingfilestodocker/host_to_docker.png" class="img-fluid"></p>
</section>
<section id="copy-files-from-the-container-to-the-host" class="level3">
<h3 class="anchored" data-anchor-id="copy-files-from-the-container-to-the-host">Copy files from the container to the host</h3>
<p>The syntax for copying file from container to host is:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="ex" style="color: null;">docker</span> cp [container:]source [destination]</span>
<span id="cb2-2">    </span></code></pre></div>
<p>The example below also show how a file from a container is copied to the host.</p>
<p><img src="https://shmuhammadblog.github.io/blog/movingfilestodocker/dockertolocal.png" class="img-fluid"></p>
<p>Thank you for reading.</p>


</section>
</section>

 ]]></description>
  <category>data science</category>
  <category>unix</category>
  <guid>https://shmuhammadblog.github.io/blog/movingfilestodocker/movinfiles.html</guid>
  <pubDate>Tue, 31 May 2022 23:00:00 GMT</pubDate>
  <media:content url="https://shmuhammadblog.github.io/blog/movingfilestodocker/docker.png" medium="image" type="image/png" height="124" width="144"/>
</item>
<item>
  <title>Why you should start a blog?</title>
  <link>https://shmuhammadblog.github.io/blog/whyblog/whyblog.html</link>
  <description><![CDATA[ 



<blockquote class="blockquote">
<p>My mentor, <a href="https://ruder.io">Sebastian Ruder</a> advises PhD students to write blogs and has this to say: “Having a blog is the single thing that has led to the most positive interactions throughout my PhD.”<sup>1</sup></p>
</blockquote>
<p>I was inspired, but I’ve been holding off writing blog posts consistently. I started in 2020 and stopped after two blog posts.&nbsp;Recently, I read a blog post by the co-founder of fast.ai, Rachel Thomas, “Why you should write blogpost”<sup>2</sup> and watched an RStudio talk by David Robinson, “The unreasonable effectiveness of public work.”<sup>3</sup> Both Rachel and David convinced me about the benefits of writing a blog post. Therefore, I braced up to start blogging consistently at least once fortnightly. As a Ph.D.&nbsp;student, writing habits will strongly build my writing and creativity muscles to the max.</p>
<p><img src="https://shmuhammadblog.github.io/blog/whyblog/lets-try.jpg" title="Lets try" class="img-fluid"></p>
<p>There are many reasons one writes a blog. For me, below are only five reasons I think a blog will help me along the way of building my career.</p>
<section id="deliberate-practice" class="level2">
<h2 class="anchored" data-anchor-id="deliberate-practice">Deliberate practice</h2>
<p>Deliberate practice&nbsp;is a systematic, focused, consistent, goal-oriented training that builds expertise or improves performance.<sup>4</sup><sup>5</sup> Building expertise in any field is not a marathon; it is a series of Sprints. Evidence has shown that experts or geniuses are always made, not born<sup>6</sup> <sup>7</sup>. For example, bodybuilders, musicians, and footballers consistently practice to achieve mastery. No one becomes an expert from day one. The same is also true for writing and any other skills. Consistent writing, even small content but engaging and informative, will improve your writing skills. As we fondly say, “practice makes perfect.” Consistent practice allows one to do a task while thinking about other things. For example, a professional orator can deliver an excellent speech without reading from any single note. Stopping to think about the task can sometimes result in a flawless performance. People refer to this performance as being “in the zone. Aristotle said:”We are what we repeatedly do. Excellence, then, is not an act, but a habit.”&nbsp;</p>
<p>Deliberate practice does not make what we learn easier; it changes the brain (Myelination). This concept is notably expressed as “<em>cells that fire together, wire together</em>.” Sometimes, we reach an “aha!” moment when learning difficult stuff - that is when someone has been struggling to understand a concept, and it suddenly becomes apparent - the clarity does not come out of nowhere.</p>
<blockquote class="blockquote">
<p>Rather, it results from a steady accumulation of information. That’s because adding additional information opens up memories associated with the task. Once those memory neurons are active, they can form new connections. They also can form stronger connections within an existing network. Over time, your level of understanding increases until you suddenly “get” it <sup>8</sup>.</p>
</blockquote>
<p>Therefore, this blog will serve as a way for me to do deliberate practices of many skills (writing, machine learning, visualization, python, r and, many more)</p>
</section>
<section id="repository-for-my-future-self" class="level2">
<h2 class="anchored" data-anchor-id="repository-for-my-future-self">Repository for my future self</h2>
<p>I am absent-minded. I write code and forget how I did it or google the same thing many times So, anything that I often google or write a complex program, I will write a blog post on it. That way, I will refer to it. Hadley Wickham inspired me in his book R for Data Science; he said, if you write the same code three times, then, you write a function for that code. Hadley’s idea was adapted from code refactoring rule of thumb (Rule of three), which states that “two instances of similar code don’t require refactoring, but when similar code is used three times, it should be extracted into a new procedure.”<sup>9</sup></p>
<p><img src="https://shmuhammadblog.github.io/blog/whyblog/write-blog.png" class="img-fluid"></p>
</section>
<section id="build-public-profile-and-network" class="level2">
<h2 class="anchored" data-anchor-id="build-public-profile-and-network">Build public profile and network</h2>
<p>Putting your work or your skills to the public is a way to put your best foot forwards. Public work can be anything like Tweets, Blog post, GitHub Repo, or Book. Like-minded people with related interests may find your blog post, network with you, and give you feedback. Many opportunities may come in your future career from the network you build. An example of this was when David Robinson answered a question on Stack Overflow<sup>10</sup>, Stack Overflow engineer saw the brilliant answer and hired him (his first job at Stack Overflow). So, a blog allows one to showcase his skills, and other people can benefit from it.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<figure class="figure">
<img src="https://shmuhammadblog.github.io/blog/whyblog/book-davide.jpg" title="Tweet-Blog-Book" class="img-fluid figure-img">
</figure>
<p></p><p></p>
</figure>
</div>
</section>
<section id="learning-by-teaching-protégé-effect" class="level2">
<h2 class="anchored" data-anchor-id="learning-by-teaching-protégé-effect">Learning by teaching (protégé effect)</h2>
<p>Robert Heinlein said, when one teaches, two learn. It means whenever you teach or explain a concept to someone, you will learn something from it or get a better insight and ultimately reach the “aha” moment. Therefore, writing a good tutorial about a brain-bending concept without dumbing it down is a great way to learn and increase visibility. As Einstein says, “If you can’t explain it simply, you don’t understand it well enough.” A study<sup>11</sup> found that when students teach the lesson’s content (active learning), they develop a more in-depth and longer-lasting understanding of the material than students who do not teach it( passive learning). Therefore, this blog will allow me to write my research and summary of papers and man more. The approach of learning by teaching was widely known as Feynman learning technique<sup>12</sup></p>
<p><img src="https://shmuhammadblog.github.io/blog/whyblog/feyman.jpg" title="Feyman Learning techniques" class="img-fluid"></p>
</section>
<section id="share-my-experience-and-opportunites" class="level2">
<h2 class="anchored" data-anchor-id="share-my-experience-and-opportunites">Share&nbsp;my experience and opportunites:</h2>
<p>I naturally love to share my experience and other opportunities with people I know. Therefore, a blog post will serve as a way to share important resources that I come across and find useful. This will benefit a wider audience.</p>
<style>
body {
text-align: justify}
</style>


</section>


<div id="quarto-appendix" class="default"><section class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p><a href="https://ruder.io/10-tips-for-research-and-a-phd/index.html#6-write-a-blog-">10 Tips for Research and a PhD</a>↩︎</p></li>
<li id="fn2"><p><a href="https://medium.com/@racheltho/why-you-yes-you-should-blog-7d2544ac1045">Why you (yes, you) should blog</a>↩︎</p></li>
<li id="fn3"><p><a href="https://www.youtube.com/watch?v=th79W4rv67g&amp;ab_channel=RStudio">“The unreasonable effectiveness of public work</a>↩︎</p></li>
<li id="fn4"><p><a href="https://jamesclear.com/deliberate-practice-myth"><strong>T</strong>he Myth and Magic of Deliberate Practice</a>↩︎</p></li>
<li id="fn5"><p><a href="https://jamesclear.com/atomic-habits">Atomic Habits: Tiny Changes, Remarkable Results.</a>↩︎</p></li>
<li id="fn6"><p><a href="https://en.wikipedia.org/wiki/L%C3%A1szl%C3%B3_Polg%C3%A1r">Geniuses are made, not born.</a>↩︎</p></li>
<li id="fn7"><p><a href="https://hbr.org/2007/07/the-making-of-an-expert" title="The making of an expert from Havard Business Review">The making of an expert</a>↩︎</p></li>
<li id="fn8"><p><a href="https://www.sciencenewsforstudents.org/article/learning-rewires-brain">Learning rewires the brain</a>↩︎</p></li>
<li id="fn9"><p><a href="https://en.wikipedia.org/wiki/Rule_of_three_(computer_programming)#">Rule of three</a>↩︎</p></li>
<li id="fn10"><p><a href="https://stats.stackexchange.com/questions/47771/what-is-the-intuition-behind-beta-distribution">David Robinson’s Stackoverflow Answer that landed him job</a>↩︎</p></li>
<li id="fn11"><p><a href="https://www.edsurge.com/news/2019-01-24-want-students-to-remember-what-they-learn-have-them-teach-it">Want Students to Remember What They Learn? Have Them Teach It</a>↩︎</p></li>
<li id="fn12"><p><a href="https://fs.blog/2012/04/feynman-technique/">The Feynman Technique: The Best Way to Learn Anything</a>↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>Books</category>
  <guid>https://shmuhammadblog.github.io/blog/whyblog/whyblog.html</guid>
  <pubDate>Mon, 30 May 2022 23:00:00 GMT</pubDate>
  <media:content url="https://shmuhammadblog.github.io/blog/whyblog/featured.jpg" medium="image" type="image/jpeg"/>
</item>
</channel>
</rss>
